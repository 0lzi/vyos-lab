{# Setup Interfaces #}
{% for interface in networks | dict2items  -%}
set interfaces ethernet {{ interface.value.interface }} address {{ interface.value.address }}
set interfaces ethernet {{ interface.value.interface }} description {{ interface.value.description }}

{# Set up DHCP-Server #}
{% if interface.value.dhcp is defined %}
set service dhcp-server shared-network-name {{ interface.value.description }} authoritative
set service dhcp-server shared-network-name {{ interface.value.description }} description '{{ interface.value.description }}'
set service dhcp-server shared-network-name {{ interface.value.description }} subnet {{ interface.value.cidr }} option default-router '{{ interface.value.gateway.split("/")[0] }}'
set service dhcp-server shared-network-name {{ interface.value.description }} subnet {{ interface.value.cidr }} option name-server '{{ interface.value.gateway.split("/")[0] }}'
set service dhcp-server shared-network-name {{ interface.value.description }} subnet {{ interface.value.cidr }} range 0 start '{{ interface.value.dhcp.start }}'
set service dhcp-server shared-network-name {{ interface.value.description }} subnet {{ interface.value.cidr }} range 0 stop '{{ interface.value.dhcp.stop }}'
set service dhcp-server shared-network-name {{ interface.value.description }} subnet {{ interface.value.cidr }} subnet-id '{{ interface.key }}'

{# Enable DNS forwarder #}
set service dns forwarding allow-from '{{ interface.value.cidr }}'
set service dns forwarding listen-address '{{ interface.value.gateway.split("/")[0] }}'
set service dns forwarding system

{# Set up NAT #}
set nat source rule {{ loop.index }} description '{{ interface.value.description }} via eth1'
set nat source rule {{ loop.index }} outbound-interface name 'eth1'
set nat source rule {{ loop.index }} source address '{{ interface.value.cidr }}'
set nat source rule {{ loop.index }} translation address 'masquerade'

{% endif %}
{% endfor %}
